;; Analyzed by ClojureScript 1.8.51
{:use-macros {warnf taoensso.timbre, go cljs.core.async.macros, go-loop cljs.core.async.macros, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre}, :excludes #{}, :name clj-eyes.core, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, img clj-eyes.img-frame, async cljs.core.async, cljs.core.async cljs.core.async, clj-eyes.controls clj-eyes.controls, taoensso.sente taoensso.sente, encore taoensso.encore, taoensso.timbre taoensso.timbre, taoensso.encore taoensso.encore, clj-eyes.img-frame clj-eyes.img-frame}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async, cb-success? taoensso.sente}, :defs {-event-msg-handler {:name clj-eyes.core/-event-msg-handler, :file "src/clj_eyes/core.cljs", :line 40, :column 1, :end-line 40, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 40, :column 11, :end-line 40, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, chsk-send! {:name clj-eyes.core/chsk-send!, :file "src/clj_eyes/core.cljs", :line 36, :column 3, :end-line 36, :end-column 18, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 36, :column 8, :end-line 36, :end-column 18}}, router_ {:name clj-eyes.core/router_, :file "src/clj_eyes/core.cljs", :line 76, :column 1, :end-line 76, :end-column 17, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 76, :column 10, :end-line 76, :end-column 17}}, event-msg-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 46, :column 7, :end-line 46, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name clj-eyes.core/event-msg-handler, :variadic false, :file "src/clj_eyes/core.cljs", :end-column 24, :method-params ([p__33081]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, ->output! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 17, :column 7, :end-line 17, :end-column 16, :arglists (quote ([fmt & args])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name clj-eyes.core/->output!, :variadic true, :file "src/clj_eyes/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args])}, ch-chsk {:name clj-eyes.core/ch-chsk, :file "src/clj_eyes/core.cljs", :line 35, :column 3, :end-line 35, :end-column 15, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 35, :column 8, :end-line 35, :end-column 15}}, chsk-state {:name clj-eyes.core/chsk-state, :file "src/clj_eyes/core.cljs", :line 37, :column 3, :end-line 37, :end-column 18, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 37, :column 8, :end-line 37, :end-column 18}}, start-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 78, :column 7, :end-line 78, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.core/start-router!, :variadic false, :file "src/clj_eyes/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, output-el {:name clj-eyes.core/output-el, :file "src/clj_eyes/core.cljs", :line 16, :column 1, :end-line 16, :end-column 15, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 16, :column 6, :end-line 16, :end-column 15}}, stop-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 77, :column 8, :end-line 77, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.core/stop-router!, :variadic false, :file "src/clj_eyes/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, chsk {:name clj-eyes.core/chsk, :file "src/clj_eyes/core.cljs", :line 34, :column 3, :end-line 34, :end-column 12, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/core.cljs", :line 34, :column 8, :end-line 34, :end-column 12}}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, encore taoensso.encore, taoensso.encore taoensso.encore, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:first-open? :chsk/recv :ch-recv :default :opencv/reload :type :chsk/state :debug :state :event :id :wrap-recv-evs? :?data :chsk :send-fn :chsk/ws-error :hierarchy :auto :p :chsk/handshake}, :order [:debug :p :auto :type :wrap-recv-evs? :chsk :ch-recv :send-fn :state :hierarchy :id :default :?data :event :chsk/state :first-open? :chsk/recv :opencv/reload :chsk/ws-error :chsk/handshake]}, :doc nil}