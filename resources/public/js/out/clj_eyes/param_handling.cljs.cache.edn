;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name clj-eyes.param-handling, :imports nil, :requires {jq jayq.core, jayq.core jayq.core, soc clj-eyes.socket, clj-eyes.socket clj-eyes.socket}, :uses nil, :defs {bind-inputs-on-change {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 136, :column 7, :end-line 136, :end-column 28, :arglists (quote ([id]))}, :name clj-eyes.param-handling/bind-inputs-on-change, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 28, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, change-optiongroup-checkbox {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 105, :column 7, :end-line 105, :end-column 34, :arglists (quote ([option-frame option-group change-fn]))}, :name clj-eyes.param-handling/change-optiongroup-checkbox, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 34, :method-params ([option-frame option-group change-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 3, :fn-var true, :arglists (quote ([option-frame option-group change-fn]))}, gather-inputs-from-option-input {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 40, :column 7, :end-line 40, :end-column 38, :arglists (quote ([option-input param-list-atom]))}, :name clj-eyes.param-handling/gather-inputs-from-option-input, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 38, :method-params ([option-input param-list-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([option-input param-list-atom]))}, manditory-or-selected {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 11, :column 7, :end-line 11, :end-column 28, :arglists (quote ([item]))}, :name clj-eyes.param-handling/manditory-or-selected, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 28, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}, gen-param-input-change-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 100, :column 7, :end-line 100, :end-column 37, :arglists (quote ([id]))}, :name clj-eyes.param-handling/gen-param-input-change-handler, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 37, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, send-update-transform-params {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 19, :column 7, :end-line 19, :end-column 35, :arglists (quote ([transformation-data-list])), :doc "Will send a notification to the server that a frame or frames' inputs have changed with a list of all of the inputs"}, :name clj-eyes.param-handling/send-update-transform-params, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 35, :method-params ([transformation-data-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([transformation-data-list])), :doc "Will send a notification to the server that a frame or frames' inputs have changed with a list of all of the inputs"}, transform-data {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name clj-eyes.param-handling/transform-data, :file "src/clj_eyes/param_handling.cljs", :end-column 26, :type true, :column 12, :internal-ctor true, :line 63, :record true, :end-line 63, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, jq-each-elements {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 6, :column 7, :end-line 6, :end-column 23, :arglists (quote ([elements each-fn]))}, :name clj-eyes.param-handling/jq-each-elements, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 23, :method-params ([elements each-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elements each-fn]))}, gen-option-checkbox-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 116, :column 7, :end-line 116, :end-column 34, :arglists (quote ([id])), :doc "Handles the checking and unchecking of the optional parameters"}, :name clj-eyes.param-handling/gen-option-checkbox-handler, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 34, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :doc "Handles the checking and unchecking of the optional parameters"}, map->transform-data {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 63, :column 12, :end-line 63, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__35577]))}, :name clj-eyes.param-handling/map->transform-data, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 26, :method-params ([G__35577]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35577]))}, find-downstream-transforms {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 65, :column 7, :end-line 65, :end-column 33, :arglists (quote ([pipeline-frame-jq]))}, :name clj-eyes.param-handling/find-downstream-transforms, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 33, :method-params ([pipeline-frame-jq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pipeline-frame-jq]))}, find-changing-transforms {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 88, :column 7, :end-line 88, :end-column 31, :arglists (quote ([id]))}, :name clj-eyes.param-handling/find-changing-transforms, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 31, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, ->transform-data {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/param_handling.cljs", :line 63, :column 12, :end-line 63, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([input-list pipeline-id]))}, :name clj-eyes.param-handling/->transform-data, :variadic false, :file "src/clj_eyes/param_handling.cljs", :end-column 26, :method-params ([input-list pipeline-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input-list pipeline-id]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:param-list pipeline-id :.pipeline-frame :value :input-list :pipeline/update-transform-params :click :id :class input-list :span.option-param-value :transform-list :change :pipeline-id :.option-input :.option-checkbox :function-name}, :order [:class :pipeline/update-transform-params :transform-list :param-list :id :function-name :input-list :pipeline-id :value :span.option-param-value input-list pipeline-id :.pipeline-frame :.option-input :change :.option-checkbox :click]}, :doc nil}