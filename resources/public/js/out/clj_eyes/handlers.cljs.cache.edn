;; Analyzed by ClojureScript 1.8.51
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name clj-eyes.handlers, :imports nil, :requires {params clj-eyes.param-handling, clj-eyes.param-handling clj-eyes.param-handling, jq jayq.core, jayq.core jayq.core, http cljs-http.client, cljs-http.client cljs-http.client, soc clj-eyes.socket, clj-eyes.socket clj-eyes.socket, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async}, :defs {select-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/handlers.cljs", :line 10, :column 7, :end-line 10, :end-column 23, :arglists (quote ([]))}, :name clj-eyes.handlers/select-transform, :variadic false, :file "src/clj_eyes/handlers.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, upload-file {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/handlers.cljs", :line 23, :column 7, :end-line 23, :end-column 18, :arglists (quote ([]))}, :name clj-eyes.handlers/upload-file, :variadic false, :file "src/clj_eyes/handlers.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-transformation {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/handlers.cljs", :line 40, :column 7, :end-line 40, :end-column 25, :arglists (quote ([html]))}, :name clj-eyes.handlers/add-transformation, :variadic false, :file "src/clj_eyes/handlers.cljs", :end-column 25, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, close-button {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/handlers.cljs", :line 46, :column 7, :end-line 46, :end-column 19, :arglists (quote ([frame-id]))}, :name clj-eyes.handlers/close-button, :variadic false, :file "src/clj_eyes/handlers.cljs", :end-column 19, :method-params ([frame-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([frame-id]))}, close-frame {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/handlers.cljs", :line 51, :column 7, :end-line 51, :end-column 18, :arglists (quote ([id]))}, :name clj-eyes.handlers/close-frame, :variadic false, :file "src/clj_eyes/handlers.cljs", :end-column 18, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:pipeline/close-frame :.pipeline-frame :else :recur :#pipeline-pipeline-source-img :input-list :parent-frame :id :pipeline/add-transformation :transformation-selection :.down-arrow :#select-transform :pipeline-id :multipart-params :img :data}, :order [:pipeline/add-transformation :transformation-selection :parent-frame :#select-transform :.pipeline-frame :img :id :multipart-params :data :input-list :pipeline-id :#pipeline-pipeline-source-img :recur :else :pipeline/close-frame :.down-arrow]}, :doc nil}