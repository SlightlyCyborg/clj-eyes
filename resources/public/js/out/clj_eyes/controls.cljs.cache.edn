;; Analyzed by ClojureScript 1.8.51
{:use-macros {warnf taoensso.timbre, go cljs.core.async.macros, go-loop cljs.core.async.macros, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre}, :excludes #{}, :name clj-eyes.controls, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, img clj-eyes.img-frame, clj-eyes.param-handling clj-eyes.param-handling, async cljs.core.async, cljs-http.client cljs-http.client, jq jayq.core, cljs.core.async cljs.core.async, jayq.core jayq.core, params clj-eyes.param-handling, taoensso.sente taoensso.sente, encore taoensso.encore, clj-eyes.socket clj-eyes.socket, soc clj-eyes.socket, taoensso.timbre taoensso.timbre, taoensso.encore taoensso.encore, clj-eyes.img-frame clj-eyes.img-frame, http cljs-http.client}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {-event-msg-handler {:name clj-eyes.controls/-event-msg-handler, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 92, :column 1, :end-line 92, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 92, :column 11, :end-line 92, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, jq-each {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 57, :column 7, :end-line 57, :end-column 14, :arglists (quote ([selector each-fn]))}, :name clj-eyes.controls/jq-each, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 14, :method-params ([selector each-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector each-fn]))}, router_ {:name clj-eyes.controls/router_, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 147, :column 1, :end-line 147, :end-column 17, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 147, :column 10, :end-line 147, :end-column 17}}, bind-on-file-select {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 30, :column 7, :end-line 30, :end-column 26, :arglists (quote ([]))}, :name clj-eyes.controls/bind-on-file-select, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event-msg-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 98, :column 7, :end-line 98, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name clj-eyes.controls/event-msg-handler, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 24, :method-params ([p__34462]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, upload-file {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([]))}, :name clj-eyes.controls/upload-file, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, other-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 76, :column 7, :end-line 76, :end-column 22, :arglists (quote ([]))}, :name clj-eyes.controls/other-transform, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-transform-options {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 79, :column 7, :end-line 79, :end-column 29, :arglists (quote ([html]))}, :name clj-eyes.controls/load-transform-options, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 29, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, start-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 149, :column 7, :end-line 149, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/start-router!, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 148, :column 8, :end-line 148, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/stop-router!, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-transformation {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 85, :column 7, :end-line 85, :end-column 25, :arglists (quote ([html]))}, :name clj-eyes.controls/add-transformation, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 25, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, handle-transform-param-change {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 63, :column 7, :end-line 63, :end-column 36, :arglists (quote ([]))}, :name clj-eyes.controls/handle-transform-param-change, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-select-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 42, :column 7, :end-line 42, :end-column 30, :arglists (quote ([]))}, :name clj-eyes.controls/handle-select-transform, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-upload-button {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 34, :column 7, :end-line 34, :end-column 25, :arglists (quote ([]))}, :name clj-eyes.controls/init-upload-button, :variadic false, :file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, encore taoensso.encore, taoensso.encore taoensso.encore, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:opencv/load-transformation :#transform-options :first-open? :chsk/recv :.pipeline-frame :else :default :pipeline/reload-img :transformation-name :name :.transform-param :value :#select-source-upload :opencv/reload :recur :chsk/state :opencv/load-transformation-options :#pipeline-pipeline-source-img :input-list :click :event :parent-frame :id :pipeline/add-transformation :#submit-new-filter-option :#source-file :?data :transformation-selection :frame-id :chsk/ws-error :change :pipeline/load-transformation-frame :hierarchy :#select-transform :pipeline-id :multipart-params :transformation-params :chsk/handshake :img :html :data}, :order [:multipart-params :data :input-list :pipeline-id :#pipeline-pipeline-source-img :recur :else :#source-file :change :#select-source-upload :click :pipeline/add-transformation :transformation-selection :parent-frame :#select-transform :.pipeline-frame :img :id :#submit-new-filter-option :name :value :opencv/load-transformation :transformation-name :transformation-params :#transform-options :.transform-param :hierarchy :default :?data :event :chsk/state :first-open? :chsk/recv :opencv/reload :pipeline/reload-img :chsk/ws-error :chsk/handshake :opencv/load-transformation-options :html :pipeline/load-transformation-frame :frame-id]}, :doc nil}