;; Analyzed by ClojureScript 1.8.51
{:use-macros {warnf taoensso.timbre, go cljs.core.async.macros, go-loop cljs.core.async.macros, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre}, :excludes #{}, :name clj-eyes.controls, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, img clj-eyes.img-frame, async cljs.core.async, cljs-http.client cljs-http.client, jq jayq.core, cljs.core.async cljs.core.async, jayq.core jayq.core, taoensso.sente taoensso.sente, encore taoensso.encore, clj-eyes.socket clj-eyes.socket, soc clj-eyes.socket, taoensso.timbre taoensso.timbre, taoensso.encore taoensso.encore, clj-eyes.img-frame clj-eyes.img-frame, http cljs-http.client}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {bind-inputs-on-change {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 102, :column 7, :end-line 102, :end-column 28, :arglists (quote ([id]))}, :name clj-eyes.controls/bind-inputs-on-change, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 28, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, -event-msg-handler {:name clj-eyes.controls/-event-msg-handler, :file "src/clj_eyes/controls.cljs", :line 123, :column 1, :end-line 123, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 123, :column 11, :end-line 123, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, jq-each {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 46, :column 7, :end-line 46, :end-column 14, :arglists (quote ([selector each-fn]))}, :name clj-eyes.controls/jq-each, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 14, :method-params ([selector each-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector each-fn]))}, manditory-or-selected {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 69, :column 7, :end-line 69, :end-column 28, :arglists (quote ([item]))}, :name clj-eyes.controls/manditory-or-selected, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 28, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item]))}, router_ {:name clj-eyes.controls/router_, :file "src/clj_eyes/controls.cljs", :line 178, :column 1, :end-line 178, :end-column 17, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 178, :column 10, :end-line 178, :end-column 17}}, gen-param-input-change-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 78, :column 7, :end-line 78, :end-column 37, :arglists (quote ([id]))}, :name clj-eyes.controls/gen-param-input-change-handler, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 37, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, bind-on-file-select {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 19, :column 7, :end-line 19, :end-column 26, :arglists (quote ([]))}, :name clj-eyes.controls/bind-on-file-select, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event-msg-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 129, :column 7, :end-line 129, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name clj-eyes.controls/event-msg-handler, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 24, :method-params ([p__29103]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, upload-file {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([]))}, :name clj-eyes.controls/upload-file, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, other-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 56, :column 7, :end-line 56, :end-column 22, :arglists (quote ([]))}, :name clj-eyes.controls/other-transform, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-transform-options {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 110, :column 7, :end-line 110, :end-column 29, :arglists (quote ([html]))}, :name clj-eyes.controls/load-transform-options, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 29, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, jq-each-elements {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 51, :column 7, :end-line 51, :end-column 23, :arglists (quote ([elements each-fn]))}, :name clj-eyes.controls/jq-each-elements, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 23, :method-params ([elements each-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elements each-fn]))}, start-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 180, :column 7, :end-line 180, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/start-router!, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 179, :column 8, :end-line 179, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/stop-router!, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-transformation {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 116, :column 7, :end-line 116, :end-column 25, :arglists (quote ([html]))}, :name clj-eyes.controls/add-transformation, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 25, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, handle-transform-param-change {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 59, :column 7, :end-line 59, :end-column 36, :arglists (quote ([]))}, :name clj-eyes.controls/handle-transform-param-change, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-select-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 31, :column 7, :end-line 31, :end-column 30, :arglists (quote ([]))}, :name clj-eyes.controls/handle-select-transform, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-upload-button {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 23, :column 7, :end-line 23, :end-column 25, :arglists (quote ([]))}, :name clj-eyes.controls/init-upload-button, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, encore taoensso.encore, taoensso.encore taoensso.encore, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:param-list :opencv/load-transformation :#transform-options :first-open? :chsk/recv :.pipeline-frame :default :pipeline/reload-img :transformation-name :name :.transform-param :value :#select-source-upload :opencv/reload :chsk/state :opencv/load-transformation-options :pipeline/update-transform-params :click :event :parent-frame :id :class :pipeline/add-transformation :#submit-new-filter-option :#source-file :?data :transformation-selection :frame-id :input :chsk/ws-error :change :pipeline/load-transformation-frame :hierarchy :#select-transform :multipart-params :transformation-params :.option-input :chsk/handshake :img :html :data}, :order [:multipart-params :data :#source-file :change :#select-source-upload :click :pipeline/add-transformation :transformation-selection :parent-frame :#select-transform :.pipeline-frame :img :id :#submit-new-filter-option :name :value :opencv/load-transformation :transformation-name :transformation-params :class :.option-input :input :pipeline/update-transform-params :param-list :#transform-options :.transform-param :hierarchy :default :?data :event :chsk/state :first-open? :chsk/recv :opencv/reload :pipeline/reload-img :chsk/ws-error :chsk/handshake :opencv/load-transformation-options :html :pipeline/load-transformation-frame :frame-id]}, :doc nil}