;; Analyzed by ClojureScript 1.8.51
{:use-macros {warnf taoensso.timbre, go cljs.core.async.macros, go-loop cljs.core.async.macros, debugf taoensso.timbre, tracef taoensso.timbre, infof taoensso.timbre, errorf taoensso.timbre}, :excludes #{}, :name clj-eyes.controls, :imports nil, :requires {sente taoensso.sente, timbre taoensso.timbre, img clj-eyes.img-frame, async cljs.core.async, cljs-http.client cljs-http.client, jq jayq.core, cljs.core.async cljs.core.async, jayq.core jayq.core, taoensso.sente taoensso.sente, encore taoensso.encore, clj-eyes.socket clj-eyes.socket, soc clj-eyes.socket, taoensso.timbre taoensso.timbre, taoensso.encore taoensso.encore, clj-eyes.img-frame clj-eyes.img-frame, http cljs-http.client}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {-event-msg-handler {:name clj-eyes.controls/-event-msg-handler, :file "src/clj_eyes/controls.cljs", :line 65, :column 1, :end-line 65, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s", :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 65, :column 11, :end-line 65, :end-column 29, :doc "Multimethod to handle Sente `event-msg`s"}}, jq-each {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 36, :column 7, :end-line 36, :end-column 14, :arglists (quote ([selector each-fn]))}, :name clj-eyes.controls/jq-each, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 14, :method-params ([selector each-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([selector each-fn]))}, router_ {:name clj-eyes.controls/router_, :file "src/clj_eyes/controls.cljs", :line 114, :column 1, :end-line 114, :end-column 17, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 114, :column 10, :end-line 114, :end-column 17}}, bind-on-file-select {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 19, :column 7, :end-line 19, :end-column 26, :arglists (quote ([]))}, :name clj-eyes.controls/bind-on-file-select, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, event-msg-handler {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 71, :column 7, :end-line 71, :end-column 24, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, :name clj-eyes.controls/event-msg-handler, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 24, :method-params ([p__30415]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:as ev-msg, :keys [id ?data event]}])), :doc "Wraps `-event-msg-handler` with logging, error catching, etc."}, upload-file {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([]))}, :name clj-eyes.controls/upload-file, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, other-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([]))}, :name clj-eyes.controls/other-transform, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-transform-options {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 54, :column 7, :end-line 54, :end-column 29, :arglists (quote ([html]))}, :name clj-eyes.controls/load-transform-options, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 29, :method-params ([html]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([html]))}, start-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 116, :column 7, :end-line 116, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/start-router!, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-router! {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 115, :column 8, :end-line 115, :end-column 20, :arglists (quote ([]))}, :name clj-eyes.controls/stop-router!, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-transform-param-change {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 44, :column 7, :end-line 44, :end-column 36, :arglists (quote ([]))}, :name clj-eyes.controls/handle-transform-param-change, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-select-transform {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 32, :column 7, :end-line 32, :end-column 30, :arglists (quote ([]))}, :name clj-eyes.controls/handle-select-transform, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-upload-button {:protocol-inline nil, :meta {:file "/Users/collinbell/Rouge/eyes/clj-eyes/src/clj_eyes/controls.cljs", :line 23, :column 7, :end-line 23, :end-column 25, :arglists (quote ([]))}, :name clj-eyes.controls/init-upload-button, :variadic false, :file "src/clj_eyes/controls.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {asyncm cljs.core.async.macros, cljs.core.async.macros cljs.core.async.macros, encore taoensso.encore, taoensso.encore taoensso.encore, timbre taoensso.timbre, taoensso.timbre taoensso.timbre}, :cljs.analyzer/constants {:seen #{:opencv/load-transformation :#transform-options :first-open? :chsk/recv :default :pipeline/reload-img :transformation-name :name :.transform-param :value :#select-source-upload :opencv/reload :chsk/state :opencv/load-transformation-options :opencv/transformation :click :event :id :#source-file :?data :transformation-selection :chsk/ws-error :change :hierarchy :#select-transform :multipart-params :transformation-params :chsk/handshake :html :data}, :order [:multipart-params :data :#source-file :change :#select-source-upload :click :opencv/transformation :transformation-selection :#select-transform :name :value :opencv/load-transformation :transformation-name :transformation-params :#transform-options :.transform-param :hierarchy :id :default :?data :event :chsk/state :first-open? :chsk/recv :opencv/reload :pipeline/reload-img :chsk/ws-error :chsk/handshake :opencv/load-transformation-options :html]}, :doc nil}